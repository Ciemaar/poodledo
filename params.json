{"name":"Poodledo","body":"Introduction\r\n============\r\npoodledo is a Python library for working with the web-based task management software [Toodledo](http://www.toodledo.com).\r\n\r\nThis particular version is an amalgam of two previous versions ([Felix Riedel's](http://code.google.com/p/poodledo/) and [Martin Treusch von Buttlar's](https://github.com/martint17r/poodledo)), substantially rewritten to use the [Toodledo API v2.0](http://api.toodledo.com/2/index.php).\r\n\r\nRequirements\r\n============\r\n- Python 2.5+ (or, an older version with the ElementTree module installed)\r\n\r\nIn addition, `tdcli` requires the following Python modules (both available by `pip install`):\r\n\r\n- [Plex](http://www.cosc.canterbury.ac.nz/greg.ewing/python/Plex/) v2.0.0\r\n- [parsedatetime](http://code.google.com/p/parsedatetime/) v0.8.7\r\n\r\nUsage\r\n=====\r\npoodledo handles almost all of the API calls described in the [Toodledo docs](http://api.toodledo.com/2/index.php).\r\n\r\nInitialization\r\n--------------\r\n\r\nCreate an `ApiClient` object and call `authenticate()` to get a session key. This key is re-used in subsequent API calls until it expires.\r\n\r\n    from apiclient import ApiClient\r\n    c = ApiClient()\r\n    c.authenticate('username@email.dom', 'password')\r\n\r\nAPI Structure\r\n-------------\r\nToodledo's API is broken down into six basic object types:\r\n\r\n- Folders\r\n- Contexts\r\n- Goals\r\n- Locations\r\n- Notebooks\r\n- Tasks\r\n\r\nalong with several other miscellaneous methods (`getAccountInfo`, `getToken`, etc.).\r\n\r\nEach object type supports the same basic operations: \"add\", \"delete\", \"edit\", and \"get\". I'll use Folders for these examples, but the other object types have equivalent methods with the appropriate names (i.e., `getContexts`, `editLocation`, `deleteGoal`, etc.).\r\n\r\nRetrieving\r\n----------\r\nCall `getFolders` to retrieve a list of folder objects from the API. This list is cached by the ApiClient until a change is made with another API call.\r\n\r\n    c.getFolders()\r\n\r\nCall `getFolder` to retrieve a specific folder object. This method takes one argument, which can be either the object's ID or its name/title.\r\n\r\n    c.getFolder('My name is')\r\n    c.getFolder(3472958)\r\n\r\nAdding\r\n------\r\nCall `addFolder` to add a new folder with the API.\r\n\r\n    c.addFolder('New Folder Name')\r\n\r\nYou can also specify object parameters as keyword arguments.\r\n\r\n    c.addFolder('Private, Archived Folder', archived=True, private=True)\r\n\r\nDeleting\r\n--------\r\nCall `deleteFolder` to delete a folder with the API. This method uses `getFolder` to identify its argument, so you can specify either the folder's name or its ID.\r\n\r\n    c.deleteFolder('Doomed Folder')\r\n\r\nEditing\r\n-------\r\nCall `editFolder` to change a folder's characteristics. Use the same arguments as `getFolder` to identify the target, and pass the changes as keyword arguments.\r\n\r\n    c.editFolder('Current Folder Name', name='New Folder Name', private=True)\r\n\r\nNotes\r\n=====\r\n- In order to use this library, you will need to [get your own API token](http://api.toodledo.com/2/account/doc_register.php). I have not included mine in the code. Add it to the dot file (`~/.tdcli/tdclirc` by default).\r\n- The test harness `test_poodledo.py` does not function at all currently.\r\n- Pull requests always welcome!\r\n\r\nTODO\r\n====\r\n- Update the test harness `test_toodledo.py` for API 2.0\r\n- Implement a generic account/key storage system\r\n- Write several sample scripts for reference\r\n- Add batch processing for notes and tasks\r\n- Write a \"pythonic\" wrapper that makes the returned objects smart (e.g., doing `task_object.name = \"New Name\"` would actually update the task's name with the API)\r\n- Make objects which have an ordering (folders and subtasks) a) honor that ordering, and b) be re-orderable\r\n\r\nLicense\r\n=======\r\npoodledo is released under a **BSD License**. See the LICENSE file for details.\r\n\r\nContact\r\n=======\r\nYou can email me at comptona@gmail.com.\r\n\r\nTo report bugs or request features, please use the **[Issues](https://github.com/handyman5/poodledo/issues)** feature.\r\n","tagline":"A python library for working with the web-based task management software Toodledo","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}